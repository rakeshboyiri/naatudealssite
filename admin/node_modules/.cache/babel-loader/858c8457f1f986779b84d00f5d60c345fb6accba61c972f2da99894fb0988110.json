{"ast":null,"code":"var _jsxFileName = \"/home/rakesh/Documents/React/affilate/frontend/src/components/AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AddProductForm from './AddProductForm';\nimport ProductList from './ProductList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/products');\n        setProducts(response.data);\n        setFilteredProducts(response.data); // Initialize filtered products\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const removeProduct = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/products/${id}`);\n      setProducts(products.filter(product => product._id !== id));\n      setFilteredProducts(filteredProducts.filter(product => product._id !== id)); // Update filtered products\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const searchProducts = query => {\n    const lowerCaseQuery = query.toLowerCase();\n    const results = products.filter(product => product.name.toLowerCase().includes(lowerCaseQuery));\n    setFilteredProducts(results);\n  };\n  const handleSearchChange = e => {\n    const query = e.target.value;\n    setSearchQuery(query);\n    searchProducts(query);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search products...\",\n      value: searchQuery,\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddProductForm, {\n      onAddProduct: product => {\n        setProducts([...products, product]);\n        setFilteredProducts([...products, product]); // Update filtered products\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n      products: filteredProducts,\n      onRemoveProduct: removeProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"YDjY/MK59I74r96ijCoC4sIXVio=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","AddProductForm","ProductList","jsxDEV","_jsxDEV","AdminPage","_s","products","setProducts","filteredProducts","setFilteredProducts","searchQuery","setSearchQuery","fetchProducts","response","get","data","err","console","error","removeProduct","id","delete","filter","product","_id","searchProducts","query","lowerCaseQuery","toLowerCase","results","name","includes","handleSearchChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onAddProduct","onRemoveProduct","_c","$RefreshReg$"],"sources":["/home/rakesh/Documents/React/affilate/frontend/src/components/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AddProductForm from './AddProductForm';\nimport ProductList from './ProductList';\n\nconst AdminPage = () => {\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/products');\n        setProducts(response.data);\n        setFilteredProducts(response.data); // Initialize filtered products\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    fetchProducts();\n  }, []);\n\n  const removeProduct = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/api/products/${id}`);\n      setProducts(products.filter(product => product._id !== id));\n      setFilteredProducts(filteredProducts.filter(product => product._id !== id)); // Update filtered products\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const searchProducts = (query) => {\n    const lowerCaseQuery = query.toLowerCase();\n    const results = products.filter(product =>\n      product.name.toLowerCase().includes(lowerCaseQuery)\n    );\n    setFilteredProducts(results);\n  };\n\n  const handleSearchChange = (e) => {\n    const query = e.target.value;\n    setSearchQuery(query);\n    searchProducts(query);\n  };\n\n  return (\n    <div>\n      <h1>Admin Page</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search products...\"\n        value={searchQuery}\n        onChange={handleSearchChange}\n      />\n      <AddProductForm onAddProduct={(product) => {\n        setProducts([...products, product]);\n        setFilteredProducts([...products, product]); // Update filtered products\n      }} />\n      <ProductList products={filteredProducts} onRemoveProduct={removeProduct} />\n    </div>\n  );\n};\n\nexport default AdminPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}